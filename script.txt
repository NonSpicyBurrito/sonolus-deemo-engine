//
// Deemo Engine
// For Sonolus 0.5.3
//
// A recreation of Deemo engine
// By Burrito
//



// Note Class

IsNoteOnScreen:LessOr(Subtract(NoteTime Time) NoteScreenTime)

InitNote:Execute(
    Set(EntityMemory *NoteBaseX1 Subtract(Multiply(NotePos PosMultiplier) Multiply(NoteSize SizeMultiplier)))
    Set(EntityMemory *NoteBaseX2 Add(Multiply(NotePos PosMultiplier) Multiply(NoteSize SizeMultiplier)))
    Set(EntityMemory *NoteZ Subtract(LayerNote Divide(NoteTime 1000)))
)

IsNoteInGoodWindow:LessOr(Subtract(NoteTime Subtract(Time InputOffset)) GoodWindow)

UpdateNoteTimeDistance:Set(EntityMemory *NoteTimeDistance Subtract(Time NoteTime))

UpdateNotePosition:Execute(
    Set(EntityMemory *NoteScale Divide(1 Subtract(1 Divide(NoteTimeDistance NoteScreenTime 0.15))))
    Set(EntityMemory *NoteX1 Multiply(NoteBaseX1 NoteScale))
    Set(EntityMemory *NoteX2 Multiply(NoteBaseX2 NoteScale))
    Set(EntityMemory *NoteY1 Add(1.15 Multiply(NoteBaseY1 NoteScale)))
    Set(EntityMemory *NoteY2 Add(1.15 Multiply(NoteBaseY2 NoteScale)))
    Set(EntityMemory *NoteAlpha UnlerpClamped(0.13 0.2 NoteScale))
)

PlayTapEffect:And(
    NoteEffect
    Execute(
        Set(EntityMemory *NoteEffectXOffset Multiply(NotePos PosMultiplier 0.52631))
        SpawnParticleEffect(
            ParticleEffectLaneC
            Add(NoteBaseX1 NoteEffectXOffset) -1.75
            Subtract(NoteBaseX1 NoteEffectXOffset) 0.25
            Subtract(NoteBaseX2 NoteEffectXOffset) 0.25
            Add(NoteBaseX2 NoteEffectXOffset) -1.75
            0.7
            0
        )

        Set(EntityMemory *NoteEffectX1 Subtract(Multiply(NotePos PosMultiplier) Multiply(NoteSize 2.5 SizeMultiplier)))
        Set(EntityMemory *NoteEffectX2 Add(Multiply(NotePos PosMultiplier) Multiply(NoteSize 2.5 SizeMultiplier)))
        Set(EntityMemory *NoteEffectXOffset Multiply(NotePos PosMultiplier 0.21052))
        SpawnParticleEffect(
            ParticleEffectTapC
            Add(NoteEffectX1 NoteEffectXOffset) -1.15
            Subtract(NoteEffectX1 NoteEffectXOffset) -0.35
            Subtract(NoteEffectX2 NoteEffectXOffset) -0.35
            Add(NoteEffectX2 NoteEffectXOffset) -1.15
            0.3
            0
        )

        SpawnParticleEffect(
            ParticleEffectTapL
            NoteBaseX1 -0.75
            NoteBaseX1 -0.35
            NoteBaseX2 -0.35
            NoteBaseX2 -0.75
            0.3
            0
        )
    )
)

PlayTapJudgmentSound:And(
    SoundEffect
    Play(Add(EffectMiss Judgment) MinEffectTime)
)
PlaySlideJudgmentSound:And(
    SoundEffect
    Play(Add(EffectMissAlternative Judgment) MinEffectTime)
)



// #0: Initialization

#0.preprocess:Execute(
    SetShifted(LevelUI *UIMenu *UIAnchorX Subtract(0.05 AspectRatio))
    SetShifted(LevelUI *UIMenu *UIAnchorY 0.95)
    SetShifted(LevelUI *UIMenu *UIPivotX 0)
    SetShifted(LevelUI *UIMenu *UIPivotY 1)
    SetShifted(LevelUI *UIMenu *UIWidth 0.15)
    SetShifted(LevelUI *UIMenu *UIHeight 0.15)
    SetShifted(LevelUI *UIMenu *UIAlpha 1)
    SetShifted(LevelUI *UIMenu *UIBackground true)

    SetShifted(LevelUI *UIJudgment *UIAnchorX 0)
    SetShifted(LevelUI *UIJudgment *UIAnchorY -0.5)
    SetShifted(LevelUI *UIJudgment *UIPivotX 0.5)
    SetShifted(LevelUI *UIJudgment *UIPivotY 0)
    SetShifted(LevelUI *UIJudgment *UIWidth Multiply(0.8 UIJudgmentSize))
    SetShifted(LevelUI *UIJudgment *UIHeight Multiply(0.2 UIJudgmentSize))
    SetShifted(LevelUI *UIJudgment *UIAlpha UIJudgmentAlpha)

    SetShifted(LevelUI *UIComboValue *UIAnchorX Multiply(AspectRatio 0.7))
    SetShifted(LevelUI *UIComboValue *UIAnchorY 0)
    SetShifted(LevelUI *UIComboValue *UIPivotX 0.5)
    SetShifted(LevelUI *UIComboValue *UIPivotY 0)
    SetShifted(LevelUI *UIComboValue *UIWidth Multiply(0.5 UIComboSize))
    SetShifted(LevelUI *UIComboValue *UIHeight Multiply(0.25 UIComboSize))
    SetShifted(LevelUI *UIComboValue *UIAlpha UIComboAlpha)

    SetShifted(LevelUI *UIComboText *UIAnchorX Multiply(AspectRatio 0.7))
    SetShifted(LevelUI *UIComboText *UIAnchorY 0)
    SetShifted(LevelUI *UIComboText *UIPivotX 0.5)
    SetShifted(LevelUI *UIComboText *UIPivotY 1)
    SetShifted(LevelUI *UIComboText *UIWidth Multiply(0.5 UIComboSize))
    SetShifted(LevelUI *UIComboText *UIHeight Multiply(0.15 UIComboSize))
    SetShifted(LevelUI *UIComboText *UIAlpha UIComboAlpha)

    SetShifted(LevelUI *UIScoreBar *UIAnchorX Subtract(AspectRatio 0.05))
    SetShifted(LevelUI *UIScoreBar *UIAnchorY 0.95)
    SetShifted(LevelUI *UIScoreBar *UIPivotX 1)
    SetShifted(LevelUI *UIScoreBar *UIPivotY 1)
    SetShifted(LevelUI *UIScoreBar *UIWidth 0.75)
    SetShifted(LevelUI *UIScoreBar *UIHeight 0.15)
    SetShifted(LevelUI *UIScoreBar *UIAlpha 1)
    SetShifted(LevelUI *UIScoreBar *UIHorizontalAlign -1)
    SetShifted(LevelUI *UIScoreBar *UIBackground true)

    SetShifted(LevelUI *UIScoreValue *UIAnchorX Subtract(AspectRatio 0.05))
    SetShifted(LevelUI *UIScoreValue *UIAnchorY 0.95)
    SetShifted(LevelUI *UIScoreValue *UIPivotX 1)
    SetShifted(LevelUI *UIScoreValue *UIPivotY 1)
    SetShifted(LevelUI *UIScoreValue *UIWidth 0.6)
    SetShifted(LevelUI *UIScoreValue *UIHeight 0.15)
    SetShifted(LevelUI *UIScoreValue *UIAlpha 1)
    SetShifted(LevelUI *UIScoreValue *UIHorizontalAlign 1)

    Set(LevelBucket 0 -50)
    Set(LevelBucket 1 50)
    Set(LevelBucket 2 -100)
    Set(LevelBucket 3 100)
    Set(LevelBucket 4 -150)
    Set(LevelBucket 5 150)

    Set(LevelBucket 6 0)
    Set(LevelBucket 7 50)
    Set(LevelBucket 8 0)
    Set(LevelBucket 9 100)
    Set(LevelBucket 10 0)
    Set(LevelBucket 11 150)

    Set(LevelScore *PerfectScoreMultiplier 1)
    Set(LevelScore *GreatScoreMultiplier 0.8)
    Set(LevelScore *GoodScoreMultiplier 0.5)

    SetShifted(LevelScore *ConsecutiveGreatScore *ConsecutiveScoreMultiplier 0.01)
    SetShifted(LevelScore *ConsecutiveGreatScore *ConsecutiveScoreStep 100)
    SetShifted(LevelScore *ConsecutiveGreatScore *ConsecutiveScoreCap 1000)
)

#0.updateSequential:Execute(
    Set(LevelMemory *StageX1 Multiply(AspectRatio -1))
    Set(LevelMemory *StageX2 AspectRatio)
    Set(LevelMemory *PosMultiplier Multiply(AspectRatio 0.35))
    Set(LevelMemory *SizeMultiplier Multiply(AspectRatio 0.17))
    Set(LevelMemory *NoteScreenTime Multiply(10.1 Power(0.707 NoteSpeed)))
    Set(LevelMemory *NoteBaseY1 Subtract(-1.9 SizeMultiplier))
    Set(LevelMemory *NoteBaseY2 Add(-1.9 SizeMultiplier))

    true
)



// #1: Stage

#1.shouldSpawn:Equal(Get(EntityInfoArray *State) Despawned)

#1.initialize:Execute(
    Set(EntityMemory *StageCoverY Lerp(1 -0.75 StageCover))
    And(
        StageEffect
        SpawnParticleEffect(
            ParticleEffectJudgeLineL
            StageX1 -0.75
            StageX1 -0.7
            StageX2 -0.7
            StageX2 -0.75
            6
            1
        )
    )
)

#1.touch:Or(
    Auto
    And(
        TempTouchStarted
        StageEffect
        SpawnParticleEffect(
            ParticleEffectSlotL
            StageX1 -0.75
            StageX1 -0.65
            StageX2 -0.65
            StageX2 -0.75
            1
            0
        )
    )
)

#1.updateParallel:Execute(
    And(
        StageCover
        Draw(
            TextureStageCover
            StageX1 StageCoverY
            StageX1 1
            StageX2 1
            StageX2 StageCoverY
            LayerStageCover
            1
        )
    )

    Draw(
        TextureJudgeLine
        StageX1 -0.76
        StageX1 -0.74
        StageX2 -0.74
        StageX2 -0.76
        LayerJudgeLine
        1
    )
)



// #2: Tap Note

#2.preprocess:Or(
    Auto
    Set(EntityInput *Accuracy GoodWindow)
)

#2.shouldSpawn:IsNoteOnScreen

#2.initialize:Execute(
    InitNote
    And(
        Auto
        Execute(
            And(
                SoundEffect
                PlayScheduled(EffectPerfect NoteTime MinEffectTime)
            )
            Set(EntityInput *Judgment JudgmentPerfect)
            Set(EntityInput *Bucket 0)
        )
    )
)

#2.touch:Or(
    Auto
    And(
        Not(InputState)
        IsNoteInGoodWindow
        TempTouchStarted
        Not(TempTouchOccupied)
        GreaterOr(TempTouchX NoteBaseX1)
        LessOr(TempTouchX NoteBaseX2)
        Execute(
            Set(TemporaryMemory *TempTouchOccupied true)
            Set(EntityMemory *InputState Terminated)
            Set(EntityInput *Judgment JudgeSimple(Subtract(TempTouchST InputOffset) NoteTime PerfectWindow GreatWindow GoodWindow))
            Set(EntityInput *Accuracy Subtract(TempTouchST InputOffset NoteTime))
            Set(EntityInput *Bucket 0)
            Set(EntityInput *BucketValue Multiply(1000 Accuracy))
            PlayTapEffect
            PlayTapJudgmentSound
        )
    )
)

#2.updateParallel:Execute(
    UpdateNoteTimeDistance
    Or(
        And(
            Auto
            GreaterOr(Time NoteTime)
            Execute(
                PlayTapEffect
                true
            )
        )
        Equal(InputState Terminated)
        Greater(Subtract(NoteTimeDistance InputOffset) GoodWindow)
        Execute(
            UpdateNotePosition
            Draw(
                TextureTapNote
                NoteX1 NoteY1
                NoteX1 NoteY2
                NoteX2 NoteY2
                NoteX2 NoteY1
                NoteZ
                NoteAlpha
            )
        )
    )
)



// #3: Slide Note

#3.preprocess:Or(
    Auto
    Set(EntityInput *Accuracy GoodWindow)
)

#3.shouldSpawn:IsNoteOnScreen

#3.initialize:Execute(
    InitNote
    And(
        Auto
        Execute(
            And(
                SoundEffect
                PlayScheduled(EffectPerfectAlternative NoteTime MinEffectTime)
            )
            Set(EntityInput *Judgment JudgmentPerfect)
            Set(EntityInput *Bucket 1)
        )
    )
)

#3.touch:Or(
    Auto
    And(
        Not(InputState)
        IsNoteInGoodWindow
        GreaterOr(TempTouchX NoteBaseX1)
        LessOr(TempTouchX NoteBaseX2)
        Execute(
            Set(EntityMemory *InputState Terminated)
            Set(EntityMemory *TerminationTime Max(Subtract(TempTouchST InputOffset) NoteTime))
        )
    )
)

#3.updateParallel:Execute(
    UpdateNoteTimeDistance
    Or(
        And(
            Auto
            GreaterOr(Time NoteTime)
            Execute(
                PlayTapEffect
                true
            )
        )
        And(
            GreaterOr(Time NoteTime)
            Equal(InputState Terminated)
            Execute(
                Set(EntityInput *Judgment JudgeSimple(TerminationTime NoteTime PerfectWindow GreatWindow GoodWindow))
                Set(EntityInput *Accuracy Subtract(TerminationTime NoteTime))
                Set(EntityInput *Bucket 1)
                Set(EntityInput *BucketValue Multiply(1000 Accuracy))
                PlayTapEffect
                PlaySlideJudgmentSound
                true
            )
        )
        Greater(Subtract(NoteTimeDistance InputOffset) GoodWindow)
        Execute(
            UpdateNotePosition
            Draw(
                TextureSlideNote
                NoteX1 NoteY1
                NoteX1 NoteY2
                NoteX2 NoteY2
                NoteX2 NoteY1
                NoteZ
                NoteAlpha
            )
        )
    )
)



// Constants

true:1
false:0

Waiting:0
Spawned:1
Despawned:2

Waiting:0
Terminated:1

PerfectWindow:0.05
GreatWindow:0.1
GoodWindow:0.15

MinEffectTime:0.02

LayerStageCover:1000
LayerNote:100
LayerJudgeLine:0

JudgmentMiss:0
JudgmentPerfect:1
JudgmentGreat:2
JudgmentGood:3



// Texture identifiers

TextureTapNote:1001
TextureSlideNote:2001
TextureJudgeLine:41000
TextureStageCover:42000



// Effect identifiers

EffectMiss:0
EffectPerfect:1
EffectGreat:2
EffectGood:3

EffectMissAlternative:1000
EffectPerfectAlternative:1001
EffectGreatAlternative:1002
EffectGoodAlternative:1003

EffectStage:10000



// Particle Effect identifiers

ParticleEffectTapC:110001
ParticleEffectTapL:120001
ParticleEffectLaneC:310000
ParticleEffectSlotL:420000
ParticleEffectJudgeLineL:520000



// Block identifiers

LevelMemory:0
LevelData:1
LevelOption:2
LevelTransform:3
LevelBackground:4
LevelUI:5
LevelBucket:6
LevelScore:7
LevelLife:8

EntityInfoArray:10
EntityDataArray:11
EntitySharedMemoryArray:12

EntityInfo:20
EntityMemory:21
EntityData:22
EntityInput:23
EntitySharedMemory:24

ArchetypeLife:30

TemporaryMemory:100
TemporaryData:101



// Level Memory Layout

*StageX1:0
*StageX2:1
*PosMultiplier:2
*SizeMultiplier:3
*NoteScreenTime:4
*NoteBaseY1:5
*NoteBaseY2:6

StageX1:Get(LevelMemory *StageX1)
StageX2:Get(LevelMemory *StageX2)
PosMultiplier:Get(LevelMemory *PosMultiplier)
SizeMultiplier:Get(LevelMemory *SizeMultiplier)
NoteScreenTime:Get(LevelMemory *NoteScreenTime)
NoteBaseY1:Get(LevelMemory *NoteBaseY1)
NoteBaseY2:Get(LevelMemory *NoteBaseY2)



// Level Data Layout

*Time:0
*DeltaTime:1
*AspectRatio:2
*AudioOffset:3
*InputOffset:4

Time:Get(LevelData *Time)
DeltaTime:Get(LevelData *DeltaTime)
AspectRatio:Get(LevelData *AspectRatio)
AudioOffset:Get(LevelData *AudioOffset)
InputOffset:Get(LevelData *InputOffset)



// Level Option Layout

*Auto:0
*Speed:1
*NoteSpeed:2
*StageCover:3
*SoundEffect:4
*NoteEffect:5
*StageEffect:6
*UIJudgmentSize:7
*UIJudgmentAlpha:8
*UIComboSize:9
*UIComboAlpha:10

Auto:Get(LevelOption *Auto)
Speed:Get(LevelOption *Speed)
NoteSpeed:Get(LevelOption *NoteSpeed)
StageCover:Get(LevelOption *StageCover)
SoundEffect:Get(LevelOption *SoundEffect)
NoteEffect:Get(LevelOption *NoteEffect)
StageEffect:Get(LevelOption *StageEffect)
UIJudgmentSize:Get(LevelOption *UIJudgmentSize)
UIJudgmentAlpha:Get(LevelOption *UIJudgmentAlpha)
UIComboSize:Get(LevelOption *UIComboSize)
UIComboAlpha:Get(LevelOption *UIComboAlpha)



// Level UI Layout

*UIMenu:0
*UIJudgment:10
*UIComboValue:20
*UIComboText:30
*UIScoreBar:40
*UIScoreValue:50
*UILifeBar:60
*UILifeValue:70

*UIAnchorX:0
*UIAnchorY:1
*UIPivotX:2
*UIPivotY:3
*UIWidth:4
*UIHeight:5
*UIRotation:6
*UIAlpha:7
*UIHorizontalAlign:8
*UIBackground:9



// Level Score Layout

*PerfectScoreMultiplier:0
*GreatScoreMultiplier:1
*GoodScoreMultiplier:2

*ConsecutivePerfectScore:3
*ConsecutiveGreatScore:6
*ConsecutiveGoodScore:9

*ConsecutiveScoreMultiplier:0
*ConsecutiveScoreStep:1
*ConsecutiveScoreCap:2



// Level Life Layout

*ConsecutivePerfectLife:0
*ConsecutiveGreatLife:2
*ConsecutiveGoodLife:4

*ConsecutiveLifeIncrement:0
*ConsecutiveLifeStep:1



// Archetype Life Layout

*PerfectLifeIncrement:0
*GreatLifeIncrement:1
*GoodLifeIncrement:2
*MissLifeIncrement:3



// Entity Info Layout

*Index:0
*Archetype:1
*State:2

Index:Get(EntityInfo *Index)
Archetype:Get(EntityInfo *Archetype)
State:Get(EntityInfo *State)



// Entity Input Layout

*Judgment:0
*Accuracy:1
*Bucket:2
*BucketValue:3

Judgment:Get(EntityInput *Judgment)
Accuracy:Get(EntityInput *Accuracy)
Bucket:Get(EntityInput *Bucket)
BucketValue:Get(EntityInput *BucketValue)



// Touch Temporary Memory Layout

*TempTouchOccupied:0

TempTouchOccupied:Get(TemporaryMemory *TempTouchOccupied)


// Touch Temporary Data Layout

*TempTouchID:0
*TempTouchStarted:1
*TempTouchEnded:2
*TempTouchT:3
*TempTouchST:4
*TempTouchX:5
*TempTouchY:6
*TempTouchSX:7
*TempTouchSY:8
*TempTouchDX:9
*TempTouchDY:10
*TempTouchVX:11
*TempTouchVY:12
*TempTouchVR:13
*TempTouchVW:14

TempTouchID:Get(TemporaryData *TempTouchID)
TempTouchStarted:Get(TemporaryData *TempTouchStarted)
TempTouchEnded:Get(TemporaryData *TempTouchEnded)
TempTouchT:Get(TemporaryData *TempTouchT)
TempTouchST:Get(TemporaryData *TempTouchST)
TempTouchX:Get(TemporaryData *TempTouchX)
TempTouchY:Get(TemporaryData *TempTouchY)
TempTouchSX:Get(TemporaryData *TempTouchSX)
TempTouchSY:Get(TemporaryData *TempTouchSY)
TempTouchDX:Get(TemporaryData *TempTouchDX)
TempTouchDY:Get(TemporaryData *TempTouchDY)
TempTouchVX:Get(TemporaryData *TempTouchVX)
TempTouchVY:Get(TemporaryData *TempTouchVY)
TempTouchVR:Get(TemporaryData *TempTouchVR)
TempTouchVW:Get(TemporaryData *TempTouchVW)



// #1 Memory Layout

*StageCoverY:0

StageCoverY:Get(EntityMemory *StageCoverY)



// Note Class Memory Layout

*InputState:32
*NoteBaseX1:33
*NoteBaseX2:34
*NoteZ:35
*NoteTimeDistance:36
*NoteScale:37
*NoteX1:38
*NoteX2:39
*NoteY1:40
*NoteY2:41
*NoteAlpha:42
*NoteEffectX1:43
*NoteEffectX2:44
*NoteEffectXOffset:45

InputState:Get(EntityMemory *InputState)
NoteBaseX1:Get(EntityMemory *NoteBaseX1)
NoteBaseX2:Get(EntityMemory *NoteBaseX2)
NoteZ:Get(EntityMemory *NoteZ)
NoteTimeDistance:Get(EntityMemory *NoteTimeDistance)
NoteScale:Get(EntityMemory *NoteScale)
NoteX1:Get(EntityMemory *NoteX1)
NoteX2:Get(EntityMemory *NoteX2)
NoteY1:Get(EntityMemory *NoteY1)
NoteY2:Get(EntityMemory *NoteY2)
NoteAlpha:Get(EntityMemory *NoteAlpha)
NoteEffectX1:Get(EntityMemory *NoteEffectX1)
NoteEffectX2:Get(EntityMemory *NoteEffectX2)
NoteEffectXOffset:Get(EntityMemory *NoteEffectXOffset)



// Note Class Data Layout

*NoteTime:0
*NotePos:1
*NoteSize:2

NoteTime:Divide(Get(EntityData *NoteTime) Speed)
NotePos:Get(EntityData *NotePos)
NoteSize:Get(EntityData *NoteSize)



// #3 Memory Layout

*TerminationTime:0

TerminationTime:Get(EntityMemory *TerminationTime)
